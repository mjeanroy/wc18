##
# The MIT License (MIT)
#
# Copyright (c) 2018 Mickael Jeanroy
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
##

debug = true

logLevel = "DEBUG"
defaultEntryPoints = ["https","http"]

# Enable HTTPS and redirect HTTP to HTTPS
[entryPoints]
  [entryPoints.http]
  address = ":80"
    [entryPoints.http.redirect]
    entryPoint = "https"
  [entryPoints.https]
  address = ":443"
  [entryPoints.https.tls]

[retry]

# Connection to docker host system (docker.sock)
# Using `exposedbydefault=fale` will hide all docker containers that don't have explicitly
# set label to "enable"
[docker]
endpoint = "unix:///var/run/docker.sock"
domain = "mr-robot.sh"
watch = true
exposedbydefault = false

# WEB interface of Traefik
# it will show web page with overview of frontend and backend configurations
[web]
address = ":8080"
#  [web.auth.basic]
#  users = ["admin:$apr1$HDxkojPf$kAhc2sb2FtE2Hk7F3Np/h/"]

# Let's encrypt configuration
[acme]
email = "mickael.jeanroy@gmail.com"
storage = "acme.json"
entryPoint = "https"
OnHostRule = true
[acme.httpChallenge]
entryPoint = "http"
